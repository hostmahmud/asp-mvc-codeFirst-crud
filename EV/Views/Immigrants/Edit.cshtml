@model EV.Models.Immigrants

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col s12 m8 l8 offset-m2 offset-l2">
        <div id="basic-form" class="card card card-default scrollspy">
            <div class="card-content">

                <div class="row">
                    <h4 class="card-title">
                        Edit <b class="pink-text">@Model.iName</b>
                        <div class="float-right" style="margin-top: -4px;">
                            <a href="@Url.Action("Index", "Immigrants")" class="mb-1 btn btn-floating waves-effect waves-light gradient-45deg-green-teal gradient-shadow float-right">
                                <i class="material-icons" style="line-height:40px">arrow_back</i>
                            </a>
                        </div>
                    </h4>
                    <hr class="mt-3 pink border-none" style="height:2px" />
                    @if (TempData["Success"] != null)
                    {
                        <div class="card-alert card green lighten-5">
                            <div class="card-content green-text">
                                <p>SUCCESS : Record has been updated successfully</p>
                            </div>
                            <button type="button" class="close green-text" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>
                    }

                </div>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "pink-text" })
                    @Html.HiddenFor(model => model.iId)
                    <div class="row">
                        <div class="input-field s6 col">
                            @Html.LabelFor(model => model.iName, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.iName, new { htmlAttributes = new { @class = "" } })
                            @Html.ValidationMessageFor(model => model.iName, "", new { @class = "pink-text" })
                        </div>
                        <div class="input-field col s12 m6 l6">
                            @Html.DropDownList("nCountryId", null, "--Nationality--")
                            @Html.ValidationMessageFor(model => model.nCountryId, "", new { @class = "pink-text" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col s12 m6 l6">
                            @Html.LabelFor(model => model.iPassNo, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.iPassNo, new { htmlAttributes = new { @class = "" } })
                            @Html.ValidationMessageFor(model => model.iPassNo, "", new { @class = "pink-text" })
                        </div>
                        <div class="input-field s6 col">
                            @Html.EditorFor(model => model.iDob, new { htmlAttributes = new { @Value = @Model.iDob.ToString("yyyy-MM-dd"), @class = "", @id = "iDob", @type = "date" } })
                            @Html.LabelFor(model => model.iDob, htmlAttributes: new { @for = "iDob" })
                            @Html.ValidationMessageFor(model => model.iDob, "", new { @class = "pink-text" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col s6">
                            <p style=" padding-top: 11px; padding-bottom: 11px; border-bottom: 1px solid rgb(158, 158, 158);">
                                <label class="mr-2">
                                    @Html.RadioButtonFor(model => model.iGender, "Male", new { @checked = "checked", }) <span>Male</span>
                                </label>
                                <label>
                                    @Html.RadioButtonFor(model => model.iGender, "Female") <span>Female</span>
                                </label>
                            </p>
                            @Html.ValidationMessageFor(model => model.iGender, "", new { @class = "pink-text" })
                        </div>
                        <div class="input-field col s6">
                            @Html.DropDownList("iPurpose", new List<SelectListItem>()
                           {
                               new SelectListItem(){ Text= "Job", Value = "Job"},
                               new SelectListItem(){ Text= "Study", Value = "Study2"},
                               new SelectListItem(){ Text= "Visit", Value = "Visit"}
                           }, "--Select Purpose--")
                            @Html.ValidationMessageFor(model => model.iPurpose, "", new { @class = "pink-text" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col s12 m6 l6">
                            @Html.DropDownList("iImmiType", new List<SelectListItem>()
                           {
                               new SelectListItem(){ Text= "In", Value = "In"},
                               new SelectListItem(){ Text= "Out", Value = "Out"}
                           }, "--Select Type--", new { @class = "iImmiType" })
                            @Html.ValidationMessageFor(model => model.iImmiType, "", new { @class = "pink-text" })
                        </div>
                        @if (Model.iImmiType == "In")
                        {
                            <div class="input-field col s12 m6 l6 hidenormal showIn">
                                @Html.DropDownList("dCountryId", null, "--Departure Country--")
                                @Html.ValidationMessageFor(model => model.dCountryId, "", new { @class = "pink-text" })
                            </div>
                        }
                        else if (Model.iImmiType == "Out")
                        {
                            <div class="input-field col s12 m6 l6 hidenormal showOut">
                                @Html.DropDownList("aCountryId", null, "--Arrival Country--")
                                @Html.ValidationMessageFor(model => model.aCountryId, "", new { @class = "pink-text" })
                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col s12 m6 l6">
                            <div class="file-field input-field">
                                <div class="btn">
                                    <span>File</span>
                                    <input type="file" name="File" id="File">
                                    @Html.EditorFor(model => model.iImage, new { htmlAttributes = new { @class = "", @style = "display:none", @id = "fileName" } })
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text">
                                </div>
                                @Html.ValidationMessageFor(model => model.iImage, "", new { @class = "pink-text" })
                            </div>
                            <div class="input-field">
                                @Html.EditorFor(model => model.iDate, new { htmlAttributes = new { @Value = @Model.iDate.ToString("yyyy-MM-dd"), @class = "", @id = "iDate", @type = "date" } })
                                @Html.LabelFor(model => model.iDate, htmlAttributes: new { @for = "iDate" })
                                @Html.ValidationMessageFor(model => model.iDate, "", new { @class = "pink-text" })
                            </div>
                        </div>
                        <div class="col s4">
                            <img class="col m12 l12" id="ImagePreview" src="@Url.Action(@Html.DisplayFor(model => model.iImage).ToString(), "Images")" height="150" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col s12 mt-5">
                            <button class="btn btn-default" type="submit" id="btnCreate">
                                Update <div class="preloader-wrapper small active" style="display:none" id="progress">
                                    <div class="spinner-layer spinner-green-only">
                                        <div class="circle-clipper left">
                                            <div class="circle"></div>
                                        </div><div class="gap-patch">
                                            <div class="circle"></div>
                                        </div><div class="circle-clipper right">
                                            <div class="circle"></div>
                                        </div>
                                    </div>
                                </div>
                            </button>
                            <span id="msg"></span>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("#File").change(function () {
            var file = $("input[type=file]").get(0).files[0];
            if (file) {
                var reader = new FileReader();

                reader.onload = function () {
                    $("#ImagePreview").attr("src", reader.result);
                    $("#fileName").val(file);
                }
                reader.readAsDataURL(file);
            }
        })
        $("form").attr("enctype", "multipart/form-data");
    </script>
    
}
